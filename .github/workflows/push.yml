name: Build develop and release branches

on: 
  push:
    branches:
      # Push events on develop branch
      - develop
      # Push events on release branches
      - 'release_v*'
    tags:
      - COMM_*    # Push events matching refs/heads/COMM_* tags
  repository_dispatch:

jobs:

  build-linux:
    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{ github.run_number }}
      PHASE_ID: x

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Make builder directory
        run: |
          mkdir -p builder

      - name: Set branch or tag name from git reference
        if: github.event.action != 'trigger'
        run: |
          export BRANCH_OR_TAG=`basename ${{ github.ref }}`
          if [[ $BRANCH_OR_TAG == 'COMM'* ]]; then
            VERSION=`echo $BRANCH_OR_TAG | cut -d"_" -f2`
            export BRANCH_OR_TAG="LIB_${VERSION}"
          fi
          echo "BRANCH_OR_TAG: ${BRANCH_OR_TAG}"
          echo "BRANCH_OR_TAG=${BRANCH_OR_TAG}" >> $GITHUB_ENV

      - name: Set branch or tag name from upstream trigger
        if: github.event.action == 'trigger'
        run: |
          echo "BRANCH_OR_TAG: ${LIB_BRANCH_OR_TAG}
          echo "BRANCH_OR_TAG=${LIB_BRANCH_OR_TAG}" >> $GITHUB_ENV
          git checkout ${LIB_BRANCH_OR_TAG}

      - name: Download artifacts from steves-test-repo
        uses: aochmann/actions-download-artifact@1.0.4
        with:
          # Optional, GitHub token
          github_token: ${{ secrets.KUHLMANNS_TOKEN }}

          # Optional, uploaded artifact name,
          # will download all artifacts if not specified
          # and extract them in respective subdirectories
          # https://github.com/actions/download-artifact#download-all-artifacts
          name: version-num-${{ env.BRANCH_OR_TAG }}-txt

          # Optional, download latest artifact
          latest: true

          # Optional, directory where to extract artifact
          path: builder

          # Optional, defaults to current repo
          repo: SKuhlmanns/steves-test-repo

      - name: Display contents
        working-directory: builder
        run: |
          ls -l
          cat *.txt

      - name: Setup build environment for release branches
        if: contains(github.ref,'refs/heads/release_v')
        run: |
          echo "PHASE ID: ${PHASE_ID}"
          echo "BUILD NUMBER: ${BUILD_NUMBER}"
          echo "Setting PHASE ID to b"
          echo "PHASE_ID=b" >> $GITHUB_ENV

      - name: Setup build environment for release tags
        if: contains(github.ref,'refs/tags/LIB')
        run: |
          echo "PHASE ID: ${PHASE_ID}"
          echo "BUILD NUMBER: ${BUILD_NUMBER}"
          echo "Setting PHASE ID to blank"
          echo "PHASE_ID=" >> $GITHUB_ENV

      - name: Build the application
        working-directory: build
        run: |
          echo "Repo Owner:" ${{ github.repository_owner }}
          echo "Run ID:" ${{ github.run_id }}

          export VER_NUM=`cat version.txt` 
          echo "${VER_NUM}${{ env.PHASE_ID }}-${BUILD_NUMBER}" > version_num.txt
          PHASE_ID=${{ env.PHASE_ID }}
          echo "PHASE ID: ${PHASE_ID}"
          cat version_num.txt
          bash bbuild.sh .. 

      - name: Upload version.txt artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: version-${{ env.BRANCH_OR_TAG }}-txt
          path: |
            build/version.txt

      - name: Upload version_num.txt artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: version-num-${{ env.BRANCH_OR_TAG }}-txt
          path: |
            build/version_num.txt
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"

      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"

      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Event Information
        run: |
          echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"

#      - name: PONG - Dispatch response to received PING
#        if: github.event.action == 'ping'
#        run: |
#          curl -X POST 'https://api.github.com/repos/SKuhlmanns/steves-test-repo/dispatches' \
#          -H 'Accept: application/vnd.github.v3+json' \
#          -u "${{ secrets.KUHLMANNS_TOKEN }}" \
#          --data '{"event_type": "pong", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'
